<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Global News</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Global News</h1>
        <div id="ai-assistant">Jarvis: Ready to assist you!</div>
    </header>
    <main>
        <div id="news-container"></div>
    </main>
    <script src="script.js"></script>
</body>
</html>

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
}

header {
    background: #333;
    color: #fff;
    padding: 10px 0;
    text-align: center;
}

#news-container {
    margin: 20px;
    display: flex;
    flex-wrap: wrap;
}

.news-article {
    background: #fff;
    border: 1px solid #ddd;
    margin: 10px;
    padding: 15px;
    width: calc(33% - 40px);
}


async function fetchNews() {
    const response = await fetch('https://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY');
    const data = await response.json();
    displayNews(data.articles);
}

function displayNews(articles) {
    const newsContainer = document.getElementById('news-container');
    newsContainer.innerHTML = '';
    articles.forEach(article => {
        const articleDiv = document.createElement('div');
        articleDiv.className = 'news-article';
        articleDiv.innerHTML = `<h2>${article.title}</h2><p>${article.description}</p>`;
        newsContainer.appendChild(articleDiv);
    });
}

setInterval(fetchNews, 1000); // Update news every second
fetchNews(); // Initial fetch


const express = require('express');
const axios = require('axios');
const app = express();
const PORT = process.env.PORT || 3000;

app.get('/news', async (req, res) => {
    try {
        const response = await axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY');
        res.json(response.data.articles);
    } catch (error) {
        res.status(500).send('Error fetching news');
    }
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});


import speech_recognition as sr
import pyttsx3
import requests

def speak(text):
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

def fetch_news():
    response = requests.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=YOUR_API_KEY')
    return response.json()

def listen_for_commands():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        r.adjust_for_ambient_noise(source)
        audio = r.listen(source)
        command = r.recognize_google(audio)
        if "news" in command:
            news = fetch_news()
            speak(f"I found {len(news['articles'])} articles.")
        else:
            speak("I didn't understand that.")

while True:
    listen_for_commands()
